#!/usr/bin/env node
'use strict';
var async = require('async');
var version = require('./package.json').version;
var pm2bin = __dirname + '/node_modules/pm2/bin/pm2';
var exec = require('child_process').execFile;
var availableActions = ['start', 'stop', 'help', 'version'];
var action = process.argv[2];
function onDone(err, apps) {
    if (err) {
        console.error(err.message, err.stack, err);
        throw err;
    }
    process.stdout.write('success.');
}
function save(cb) {
    setTimeout(function () {
        exec(pm2bin, ['save'], cb);
    }, 1000);
}

if (!~availableActions.indexOf(action)) {
    console.error('First argument is invalid. Choose from:', availableActions.join(','));
    console.error(process.argv);
    return;
}
if (action === 'help') {
    console.log('\nUsage:')
    console.log('\n  $  kval [', availableActions.join(','), ']');
    console.log('\nOptions (defaults shown)');
    Object.keys(args).forEach(function (name) {
        console.log(' ', '--' + name + '=' + args[name]);
    });
    return;
}
if (action === 'version') {
    console.log(version);
    return;
}

switch (action) {
    case 'start':
        console.log('starting...');
        async.series([
            function (cb) {
                exec(pm2bin, ['start', __dirname + '/db-config.json'], cb);
            },
            function (cb) {
                setTimeout(function () {
                    exec(pm2bin, ['startup'], cb);
                }, 2000);
            },
            save
        ], onDone);
    break;
    case 'stop':
        console.log('stopping...');
        async.series([
            function (cb) {
                pm2.stop('kval', cb);
            },
            save
        ], onDone);
    break;
}
